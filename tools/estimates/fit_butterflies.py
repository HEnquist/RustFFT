import sys
from matplotlib import pyplot as plt
import numpy as np
from read_bench_series import read_benches
from normalize_data import normalize

fnames = sys.argv[1:]
data = read_benches(fnames)
data = normalize(data)

length = [2, 3, 4, 5, 6, 7, 8, 11, 13, 16, 17, 19, 23, 29, 31, 32]
multi_nbr = np.array([1,2,3,5,8,13,21,34,55,89])
plot_nbr = np.arange(0,89)
all_cost = []
k_v = []
m_v = []
for fftlen in length:
    estimated_cost = []
    for nbr in multi_nbr:
        benchname = f"bench_planned_multi_{fftlen}_{nbr}"
        cost = data[benchname]
        estimated_cost.append(cost)
    # y = k*x + m
    k, m = np.polyfit(multi_nbr, estimated_cost, 1)
    k_v.append(k)
    m_v.append(m)
    
    all_cost.append(estimated_cost)

    plt.figure(fftlen)
    plt.plot(multi_nbr, estimated_cost, '*')
    plt.plot(plot_nbr, k*plot_nbr + m)

print("--- Paste in scalar_planner_estimates.rs ---")
print("// --- Begin code generated by tools/estimates/fit_butterflies.py --- \n")
for fftlen, k, m in zip(length, k_v, m_v):
    print(f"const BUTTERFLY_SLOPE_{fftlen}: f32 = {k:.5f};")
    print(f"const BUTTERFLY_CONST_{fftlen}: f32 = {m:.5f};")
    print("")
    print(f"pub fn estimate_butterfly_cost_{fftlen}(repeats: usize) -> f32 {{")
    print(f"    BUTTERFLY_SLOPE_{fftlen} * repeats as f32 + BUTTERFLY_CONST_{fftlen}")
    print("}")
    print("")
print("// --- End code generated by tools/estimates/fit_butterflies.py --- \n")

#print("\n--- Paste in fit_mixedradixes.py ---")
#for fftlen, k, m in zip(length, k_v, m_v):
#    print(f'    {fftlen}: {{ "slope": {k}, "const": {m}}},')
#
plt.show()

